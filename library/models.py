from django.db import models
from django.utils.text import slugify

class Category(models.Model):
    title = models.CharField(max_length=150, verbose_name='–ù–∞–∑–≤–∞', unique=True)

    def __str__(self):
        return self.title

class Author(models.Model):
    first_last_name = models.CharField(max_length=200, verbose_name="–Ü–º'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ")
    birthday = models.DateTimeField(verbose_name='–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è', null=True)
    ganre_books = models.ForeignKey(Category, on_delete=models.CASCADE, verbose_name='–ñ–∞–Ω—Ä–∏ –∫–Ω–∏–≥', null=True, blank=True)

    class Meta:
        verbose_name = '–ê–≤—Ç–æ—Ä'
        verbose_name_plural = '–ê–≤—Ç–æ—Ä–∏'
        ordering = ['first_last_name',]

    def __str__(self):
        return self.first_last_name
    
class Book(models.Model):
    title = models.CharField(max_length=150, verbose_name='–ù–∞–∑–≤–∞')
    slug = models.SlugField(verbose_name='URL', unique=True)
    year = models.IntegerField(verbose_name='–†—ñ–∫ –≤–∏–¥–∞–Ω–Ω—è', default=0)
    author = models.ForeignKey(Author, on_delete=models.CASCADE, verbose_name='–ê–≤—Ç–æ—Ä', related_name='books', blank=True, null=True)
    category = models.ManyToManyField(Category, verbose_name='–ñ–∞–Ω—Ä', related_name='books')
    created = models.DateTimeField(auto_now_add=True, verbose_name='–î–∞—Ç–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–∏–≥–∏')
    updated = models.DateTimeField(auto_now=True, verbose_name='–î–∞—Ç–∞ –∑–º—ñ–Ω–µ–Ω–Ω—è')

    class Meta:
        verbose_name = '–ö–Ω–∏–≥–∞'
        verbose_name_plural = '–ö–Ω–∏–≥–∏'
        ordering = ['title']

    def __str__(self):
        return self.title
    
    def save(self, *args, **kwargs):
        if not self.slug:  # üëà –≥–µ–Ω–µ—Ä—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ slug –ø–æ—Ä–æ–∂–Ω—ñ–π
            base_slug = slugify(self.title)
            slug = base_slug
            counter = 1

            # —É–Ω—ñ–∫–∞–ª—å–Ω—ñ—Å—Ç—å slug
            while Book.objects.filter(slug=slug).exists():
                slug = f"{base_slug}-{counter}"
                counter += 1

            self.slug = slug
        super().save(*args, **kwargs)
